% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/to_sf.R
\name{to_sf}
\alias{to_sf}
\alias{sf_mpoly}
\alias{sf_mline}
\alias{sf_poly}
\alias{sf_line}
\alias{sf_mpt}
\alias{sf_pt}
\alias{sf_to_df}
\title{Construct sf object}
\usage{
to_sf(x, debug = TRUE)
}
\arguments{
\item{x}{data frame}

\item{debug}{set `TRUE` by defult to report sf type to be built}
}
\value{
sf data frame
}
\description{
Construct sf based on presence of column names.
}
\details{
The geometric type (XY, XYZ, XYZM, XYM) is taken from the presence
of "x", "y" (mandatory), and  "z" and/or "m".

The sf column-vector type is taken from the presence of "multipolygon_id",
"polygon_id", "multilinestring_id", "linestring_id", "multipoint_id".
If none of these are present "POINT" is chosen.

The functions [sf_to_df] [sf_mpoly] [sf_mline] [sf_poly] [sf_line] [sf_mpt]
[sf_pt] are imported and re-exported from sfheaders for convenience
}
\examples{
df <- data.frame(
  ml_id = c(1,1,1,1,1,1,1,1,2,2,2,2,2)
  , l_id = c(1,1,1,2,2,3,3,3,1,1,1,2,2)
  , lon = rnorm(13)
  , lat = rnorm(13)
  , zz = rnorm(13)
  , mm = rnorm(13)
)

library(dplyr); library(sf)
library(sfheaders)
## specify multlinestring
df \%>\% transmute(x = lon, y = lat, m = mm,
                multilinestring_id = ml_id,
                linestring_id = l_id) \%>\% to_sf()

## round trip
sf_to_df(silicate::minimal_mesh) \%>\% to_sf()

## linestring (have to hack, it's not realistic)
sf_to_df(silicate::minimal_mesh) \%>\%
transmute(m = 1, y, x, linestring_id) \%>\%
 arrange(linestring_id) \%>\% ## needed because we are hacking mpoly
to_sf()

## we get POINT
sf_to_df(silicate::minimal_mesh) \%>\% transmute(y, x) \%>\%
to_sf()

## MULTIPOINT
sf_to_df(silicate::minimal_mesh) \%>\%
 transmute(x, y, multipoint_id = row_number() > 3, polygon_id) \%>\%
 to_sf()


}
